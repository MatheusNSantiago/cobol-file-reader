stages:
  - .pre
  - tests
  - build
  - release
  - deploy

include:
  - remote: 'https://api.r2devops.io/job/r/gitlab/r2devops/hub/npm_install@0.4.3.yaml?ignore=true.yaml'
  - remote: 'https://api.r2devops.io/job/r/gitlab/r2devops/hub/npm_test@1.2.1.yaml?ignore=true.yaml'
  - remote: 'https://api.r2devops.io/job/r/gitlab/r2devops/hub/npm_build@0.4.1.yaml?ignore=true.yaml'
  - remote: 'https://api.r2devops.io/job/r/gitlab/r2devops/hub/semantic_release@1.1.0.yaml?ignore=true.yaml'
  - remote: 'https://api.r2devops.io/job/r/gitlab/r2devops/hub/vscode_publish@0.1.0.yaml?ignore=true.yaml'

cache:
  key:
    files:
      - "${CI_PROJECT_DIR}/${PROJECT_ROOT}/package-lock.json"
      - "${CI_PROJECT_DIR}/${PROJECT_ROOT}/package.json"
    prefix: "npm-${CI_COMMIT_REF_SLUG}"
  paths:
    - "${CI_PROJECT_DIR}/${PROJECT_ROOT}/node_modules"
    # Cache the node_modules of the webview-ui
    - "${CI_PROJECT_DIR}/${PROJECT_ROOT}/webview-ui/node_modules"


npm_install:
  script:
    - npm run install:all

npm_build:
  variables:
    # This folder is the build result of the webview-ui
    NPM_BUILD_OUTPUT_FOLDER: "webview-ui/build"
    # Accelerate the build by using a lighter image
    IMAGE_TAG: "18-alpine"
  artifacts:
    expose_as: "npm build"
    paths:
      - "${PROJECT_ROOT}/${NPM_BUILD_OUTPUT_FOLDER}"
      # Also expose the out folder of the extension
      - "${PROJECT_ROOT}/out"

semantic_release:
  stage: release
  variables:
    IMAGE_TAG: "16"
  before_script:
    - cd ".gitlab/semantic-release/"
  after_script:
    - echo RELEASE="$(git describe --tags --abbrev=0)" > release.env
  artifacts:
    reports:
      dotenv: release.env
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: manual
  
vscode_publish:
  variables:
    RELEASE_VERSION: $RELEASE